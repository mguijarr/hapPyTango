""" Module: IDL:Tango:1.0

Automagically generated by:-

The ORB called Fnorb v1.1.Return.of.Fnorb

"""

_FNORB_ID = "IDL:Tango:1.0"

# Fnorb modules.
import Fnorb.orb.CORBA
import Fnorb.orb.TypeManager
import Fnorb.orb.Util

# Alias: IDL:Tango/DevBoolean:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevBoolean:1.0", "0000000000000008", None)

# Alias: IDL:Tango/DevDouble:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevDouble:1.0", "0000000000000007", None)

# Alias: IDL:Tango/DevFloat:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevFloat:1.0", "0000000000000006", None)

# Alias: IDL:Tango/DevShort:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevShort:1.0", "0000000000000002", None)

# Alias: IDL:Tango/DevLong:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevLong:1.0", "0000000000000003", None)

# Alias: IDL:Tango/DevLong64:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevLong64:1.0", "0000000000000017", None)

# Alias: IDL:Tango/DevString:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevString:1.0", "000000000000001200000000", None)

# Alias: IDL:Tango/DevUChar:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevUChar:1.0", "000000000000000A", None)

# Alias: IDL:Tango/DevUShort:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevUShort:1.0", "0000000000000004", None)

# Alias: IDL:Tango/DevULong:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevULong:1.0", "0000000000000005", None)

# Alias: IDL:Tango/DevULong64:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevULong64:1.0", "0000000000000005", None)

# Alias: IDL:Tango/DevVarBooleanArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarBooleanArray:1.0", "00000000000000130000000C000000000000000800000000", None)

# Alias: IDL:Tango/DevVarDoubleArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarDoubleArray:1.0", "00000000000000130000000C000000000000000700000000", None)

# Alias: IDL:Tango/DevVarFloatArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarFloatArray:1.0", "00000000000000130000000C000000000000000600000000", None)

# Alias: IDL:Tango/DevVarShortArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarShortArray:1.0", "00000000000000130000000C000000000000000200000000", None)

# Alias: IDL:Tango/DevVarLongArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarLongArray:1.0", "00000000000000130000000C000000000000000300000000", None)

# Alias: IDL:Tango/DevVarLong64Array:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarLong64Array:1.0", "00000000000000130000000C000000000000001700000000", None)

# Alias: IDL:Tango/DevVarCharArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarCharArray:1.0", "00000000000000130000000C000000000000000A00000000", None)

# Alias: IDL:Tango/DevVarStringArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarStringArray:1.0", "00000000000000130000001000000000000000120000000000000000", None)

# Alias: IDL:Tango/DevVarUShortArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarUShortArray:1.0", "00000000000000130000000C000000000000000400000000", None)

# Alias: IDL:Tango/DevVarULongArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarULongArray:1.0", "00000000000000130000000C000000000000000500000000", None)

# Alias: IDL:Tango/DevVarULong64Array:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarULong64Array:1.0", "00000000000000130000000C000000000000000500000000", None)

class DevVarLongStringArray:
    """ Struct: IDL:Tango/DevVarLongStringArray:1.0 """

    _FNORB_ID = "IDL:Tango/DevVarLongStringArray:1.0"

    def __init__(self, _lvalue, _svalue):
        """ Constructor. """

        self.lvalue = _lvalue
        self.svalue = _svalue
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.lvalue, self.svalue)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarLongStringArrayevVarLongStringArray)

class DevVarDoubleStringArray:
    """ Struct: IDL:Tango/DevVarDoubleStringArray:1.0 """

    _FNORB_ID = "IDL:Tango/DevVarDoubleStringArray:1.0"

    def __init__(self, _dvalue, _svalue):
        """ Constructor. """

        self.dvalue = _dvalue
        self.svalue = _svalue
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.dvalue, self.svalue)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarDoubleStringArrayevVarDoubleStringArray)

class DevEncoded:
    """ Struct: IDL:Tango/DevEncoded:1.0 """

    _FNORB_ID = "IDL:Tango/DevEncoded:1.0"

    def __init__(self, _encoded_format, _encoded_data):
        """ Constructor. """

        self.encoded_format = _encoded_format
        self.encoded_data = _encoded_data
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.encoded_format, self.encoded_data)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevEncoded:1.0", "000000000000000F000000F8000000000000001949444C3A54616E676F2F446576456E636F6465643A312E30000000000000000B446576456E636F6465640000000000020000000F656E636F6465645F666F726D617400000000001500000038000000000000001849444C3A54616E676F2F446576537472696E673A312E30000000000A446576537472696E6700000000000012000000000000000D656E636F6465645F64617461000000000000001500000050000000000000001E49444C3A54616E676F2F4465765661724368617241727261793A312E300000000000001044657656617243686172417272617900000000130000000C000000000000000A00000000", DevEncoded)

# Alias: IDL:Tango/DevVarEncodedArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarEncodedArrayone)

# Alias: IDL:Tango/JavaUUID:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/JavaUUID:1.0", "00000000000000140000000C000000000000000500000002", None)

# Alias: IDL:Tango/CppClntIdent:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/CppClntIdent:1.0", "0000000000000005", None)

class JavaClntIdent:
    """ Struct: IDL:Tango/JavaClntIdent:1.0 """

    _FNORB_ID = "IDL:Tango/JavaClntIdent:1.0"

    def __init__(self, _MainClass, _uuid):
        """ Constructor. """

        self.MainClass = _MainClass
        self.uuid = _uuid
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.MainClass, self.uuid)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/JavaClntIdent:1.0", "000000000000000F000000AC000000000000001C49444C3A54616E676F2F4A617661436C6E744964656E743A312E30000000000E4A617661436C6E744964656E74000000000000020000000A4D61696E436C61737300000000000012000000000000000575756964000000000000001500000044000000000000001749444C3A54616E676F2F4A617661555549443A312E300000000000094A6176615555494400000000000000140000000C000000000000000500000002", JavaClntIdent)

# Enum: IDL:Tango/LockerLanguage:1.0
CPP = Fnorb.orb.Util.EnumMember("CPP", 0)
JAVA = Fnorb.orb.Util.EnumMember("JAVA", 1)
LockerLanguage = Fnorb.orb.Util.Enum("IDL:Tango/LockerLanguage:1.0", [CPP, JAVA])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/LockerLanguage:1.0", "000000000000001100000051000000000000001D49444C3A54616E676F2F4C6F636B65724C616E67756167653A312E30000000000000000F4C6F636B65724C616E67756167650000000000020000000443505000000000054A41564100", LockerLanguage)

class ClntIdent(Fnorb.orb.Util.Union):
    """ Union: IDL:Tango/ClntIdent:1.0 """

    _FNORB_ID = "IDL:Tango/ClntIdent:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/ClntIdentlntIdent)

# Enum: IDL:Tango/AttrQuality:1.0
ATTR_VALID = Fnorb.orb.Util.EnumMember("ATTR_VALID", 0)
ATTR_INVALID = Fnorb.orb.Util.EnumMember("ATTR_INVALID", 1)
ATTR_ALARM = Fnorb.orb.Util.EnumMember("ATTR_ALARM", 2)
ATTR_CHANGING = Fnorb.orb.Util.EnumMember("ATTR_CHANGING", 3)
ATTR_WARNING = Fnorb.orb.Util.EnumMember("ATTR_WARNING", 4)
AttrQuality = Fnorb.orb.Util.Enum("IDL:Tango/AttrQuality:1.0", [ATTR_VALID, ATTR_INVALID, ATTR_ALARM, ATTR_CHANGING, ATTR_WARNING])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttrQuality:1.0", "000000000000001100000091000000000000001A49444C3A54616E676F2F417474725175616C6974793A312E300000000000000C417474725175616C69747900000000050000000B415454525F56414C494400000000000D415454525F494E56414C4944000000000000000B415454525F414C41524D00000000000E415454525F4348414E47494E470000000000000D415454525F5741524E494E4700", AttrQuality)

# Enum: IDL:Tango/AttrWriteType:1.0
READ = Fnorb.orb.Util.EnumMember("READ", 0)
READ_WITH_WRITE = Fnorb.orb.Util.EnumMember("READ_WITH_WRITE", 1)
WRITE = Fnorb.orb.Util.EnumMember("WRITE", 2)
READ_WRITE = Fnorb.orb.Util.EnumMember("READ_WRITE", 3)
AttrWriteType = Fnorb.orb.Util.Enum("IDL:Tango/AttrWriteType:1.0", [READ, READ_WITH_WRITE, WRITE, READ_WRITE])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttrWriteType:1.0", "000000000000001100000077000000000000001C49444C3A54616E676F2F417474725772697465547970653A312E30000000000E417474725772697465547970650000000000000400000005524541440000000000000010524541445F574954485F5752495445000000000657524954450000000000000B524541445F575249544500", AttrWriteType)

# Enum: IDL:Tango/AttrDataFormat:1.0
SCALAR = Fnorb.orb.Util.EnumMember("SCALAR", 0)
SPECTRUM = Fnorb.orb.Util.EnumMember("SPECTRUM", 1)
IMAGE = Fnorb.orb.Util.EnumMember("IMAGE", 2)
FMT_UNKNOWN = Fnorb.orb.Util.EnumMember("FMT_UNKNOWN", 3)
AttrDataFormat = Fnorb.orb.Util.Enum("IDL:Tango/AttrDataFormat:1.0", [SCALAR, SPECTRUM, IMAGE, FMT_UNKNOWN])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttrDataFormat:1.0", "000000000000001100000078000000000000001D49444C3A54616E676F2F4174747244617461466F726D61743A312E30000000000000000F4174747244617461466F726D6174000000000004000000075343414C4152000000000009535045435452554D0000000000000006494D4147450000000000000C464D545F554E4B4E4F574E00", AttrDataFormat)

# Enum: IDL:Tango/DevSource:1.0
DEV = Fnorb.orb.Util.EnumMember("DEV", 0)
CACHE = Fnorb.orb.Util.EnumMember("CACHE", 1)
CACHE_DEV = Fnorb.orb.Util.EnumMember("CACHE_DEV", 2)
DevSource = Fnorb.orb.Util.Enum("IDL:Tango/DevSource:1.0", [DEV, CACHE, CACHE_DEV])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevSource:1.0", "000000000000001100000056000000000000001849444C3A54616E676F2F446576536F757263653A312E30000000000A446576536F757263650000000000000300000004444556000000000643414348450000000000000A43414348455F44455600", DevSource)

# Enum: IDL:Tango/ErrSeverity:1.0
WARN = Fnorb.orb.Util.EnumMember("WARN", 0)
ERR = Fnorb.orb.Util.EnumMember("ERR", 1)
PANIC = Fnorb.orb.Util.EnumMember("PANIC", 2)
ErrSeverity = Fnorb.orb.Util.Enum("IDL:Tango/ErrSeverity:1.0", [WARN, ERR, PANIC])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/ErrSeverity:1.0", "000000000000001100000056000000000000001A49444C3A54616E676F2F45727253657665726974793A312E300000000000000C45727253657665726974790000000003000000055741524E0000000000000004455252000000000650414E494300", ErrSeverity)

# Enum: IDL:Tango/DevState:1.0
ON = Fnorb.orb.Util.EnumMember("ON", 0)
OFF = Fnorb.orb.Util.EnumMember("OFF", 1)
CLOSE = Fnorb.orb.Util.EnumMember("CLOSE", 2)
OPEN = Fnorb.orb.Util.EnumMember("OPEN", 3)
INSERT = Fnorb.orb.Util.EnumMember("INSERT", 4)
EXTRACT = Fnorb.orb.Util.EnumMember("EXTRACT", 5)
MOVING = Fnorb.orb.Util.EnumMember("MOVING", 6)
STANDBY = Fnorb.orb.Util.EnumMember("STANDBY", 7)
FAULT = Fnorb.orb.Util.EnumMember("FAULT", 8)
INIT = Fnorb.orb.Util.EnumMember("INIT", 9)
RUNNING = Fnorb.orb.Util.EnumMember("RUNNING", 10)
ALARM = Fnorb.orb.Util.EnumMember("ALARM", 11)
DISABLE = Fnorb.orb.Util.EnumMember("DISABLE", 12)
UNKNOWN = Fnorb.orb.Util.EnumMember("UNKNOWN", 13)
DevState = Fnorb.orb.Util.Enum("IDL:Tango/DevState:1.0", [ON, OFF, CLOSE, OPEN, INSERT, EXTRACT, MOVING, STANDBY, FAULT, INIT, RUNNING, ALARM, DISABLE, UNKNOWN])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevState:1.0", "0000000000000011000000D4000000000000001749444C3A54616E676F2F44657653746174653A312E300000000000094465765374617465000000000000000E000000034F4E0000000000044F46460000000006434C4F5345000000000000054F50454E0000000000000007494E534552540000000000084558545241435400000000074D4F56494E470000000000085354414E44425900000000064641554C5400000000000005494E4954000000000000000852554E4E494E470000000006414C41524D0000000000000844495341424C450000000008554E4B4E4F574E00", DevState)

# Enum: IDL:Tango/DispLevel:1.0
OPERATOR = Fnorb.orb.Util.EnumMember("OPERATOR", 0)
EXPERT = Fnorb.orb.Util.EnumMember("EXPERT", 1)
DispLevel = Fnorb.orb.Util.Enum("IDL:Tango/DispLevel:1.0", [OPERATOR, EXPERT])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DispLevel:1.0", "00000000000000110000004F000000000000001849444C3A54616E676F2F446973704C6576656C3A312E30000000000A446973704C6576656C00000000000002000000094F50455241544F52000000000000000745585045525400", DispLevel)

# Alias: IDL:Tango/DevVarStateArray:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevVarStateArray:1.0", "0000000000000013000000E40000000000000011000000D4000000000000001749444C3A54616E676F2F44657653746174653A312E300000000000094465765374617465000000000000000E000000034F4E0000000000044F46460000000006434C4F5345000000000000054F50454E0000000000000007494E534552540000000000084558545241435400000000074D4F56494E470000000000085354414E44425900000000064641554C5400000000000005494E4954000000000000000852554E4E494E470000000006414C41524D0000000000000844495341424C450000000008554E4B4E4F574E0000000000", None)

class TimeVal:
    """ Struct: IDL:Tango/TimeVal:1.0 """

    _FNORB_ID = "IDL:Tango/TimeVal:1.0"

    def __init__(self, _tv_sec, _tv_usec, _tv_nsec):
        """ Constructor. """

        self.tv_sec = _tv_sec
        self.tv_usec = _tv_usec
        self.tv_nsec = _tv_nsec
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.tv_sec, self.tv_usec, self.tv_nsec)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/TimeVal:1.0", "000000000000000F00000060000000000000001649444C3A54616E676F2F54696D6556616C3A312E300000000000000854696D6556616C00000000030000000774765F7365630000000000030000000874765F7573656300000000030000000874765F6E7365630000000003", TimeVal)

class DevCmdInfo:
    """ Struct: IDL:Tango/DevCmdInfo:1.0 """

    _FNORB_ID = "IDL:Tango/DevCmdInfo:1.0"

    def __init__(self, _cmd_name, _cmd_tag, _in_type, _out_type, _in_type_desc, _out_type_desc):
        """ Constructor. """

        self.cmd_name = _cmd_name
        self.cmd_tag = _cmd_tag
        self.in_type = _in_type
        self.out_type = _out_type
        self.in_type_desc = _in_type_desc
        self.out_type_desc = _out_type_desc
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.cmd_name, self.cmd_tag, self.in_type, self.out_type, self.in_type_desc, self.out_type_desc)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevCmdInfo:1.0", "000000000000000F000000BC000000000000001949444C3A54616E676F2F446576436D64496E666F3A312E30000000000000000B446576436D64496E666F00000000000600000009636D645F6E616D6500000000000000120000000000000008636D645F746167000000000300000008696E5F747970650000000003000000096F75745F7479706500000000000000030000000D696E5F747970655F646573630000000000000012000000000000000E6F75745F747970655F646573630000000000001200000000", DevCmdInfo)

class DevCmdInfo_2:
    """ Struct: IDL:Tango/DevCmdInfo_2:1.0 """

    _FNORB_ID = "IDL:Tango/DevCmdInfo_2:1.0"

    def __init__(self, _cmd_name, _level, _cmd_tag, _in_type, _out_type, _in_type_desc, _out_type_desc):
        """ Constructor. """

        self.cmd_name = _cmd_name
        self.level = _level
        self.cmd_tag = _cmd_tag
        self.in_type = _in_type
        self.out_type = _out_type
        self.in_type_desc = _in_type_desc
        self.out_type_desc = _out_type_desc
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.cmd_name, self.level, self.cmd_tag, self.in_type, self.out_type, self.in_type_desc, self.out_type_desc)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevCmdInfoevCmdInfo_2)

# Alias: IDL:Tango/DevCmdInfoList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevCmdInfoList:1.0", "0000000000000013000000CC000000000000000F000000BC000000000000001949444C3A54616E676F2F446576436D64496E666F3A312E30000000000000000B446576436D64496E666F00000000000600000009636D645F6E616D6500000000000000120000000000000008636D645F746167000000000300000008696E5F747970650000000003000000096F75745F7479706500000000000000030000000D696E5F747970655F646573630000000000000012000000000000000E6F75745F747970655F64657363000000000000120000000000000000", None)

# Alias: IDL:Tango/DevCmdInfoList_2:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevCmdInfoListone)

class DevError:
    """ Struct: IDL:Tango/DevError:1.0 """

    _FNORB_ID = "IDL:Tango/DevError:1.0"

    def __init__(self, _reason, _severity, _desc, _origin):
        """ Constructor. """

        self.reason = _reason
        self.severity = _severity
        self.desc = _desc
        self.origin = _origin
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.reason, self.severity, self.desc, self.origin)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevError:1.0", "000000000000000F000000E0000000000000001749444C3A54616E676F2F4465764572726F723A312E300000000000094465764572726F72000000000000000400000007726561736F6E00000000001200000000000000097365766572697479000000000000001100000056000000000000001A49444C3A54616E676F2F45727253657665726974793A312E300000000000000C45727253657665726974790000000003000000055741524E0000000000000004455252000000000650414E49430000000000000564657363000000000000001200000000000000076F726967696E00000000001200000000", DevError)

# Alias: IDL:Tango/DevErrorList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevErrorListone)

class NamedDevError:
    """ Struct: IDL:Tango/NamedDevError:1.0 """

    _FNORB_ID = "IDL:Tango/NamedDevError:1.0"

    def __init__(self, _name, _index_in_call, _err_list):
        """ Constructor. """

        self.name = _name
        self.index_in_call = _index_in_call
        self.err_list = _err_list
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.name, self.index_in_call, self.err_list)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/NamedDevErroramedDevError)

# Alias: IDL:Tango/NamedDevErrorList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/NamedDevErrorList:1.0", "0000000000000013000001C0000000000000000F000001B0000000000000001C49444C3A54616E676F2F4E616D65644465764572726F723A312E30000000000E4E616D65644465764572726F7200000000000003000000056E616D650000000000000012000000000000000E696E6465785F696E5F63616C6C00000000000003000000096572725F6C697374000000000000001500000130000000000000001B49444C3A54616E676F2F4465764572726F724C6973743A312E3000000000000D4465764572726F724C6973740000000000000013000000F0000000000000000F000000E0000000000000001749444C3A54616E676F2F4465764572726F723A312E300000000000094465764572726F72000000000000000400000007726561736F6E00000000001200000000000000097365766572697479000000000000001100000056000000000000001A49444C3A54616E676F2F45727253657665726974793A312E300000000000000C45727253657665726974790000000003000000055741524E0000000000000004455252000000000650414E49430000000000000564657363000000000000001200000000000000076F726967696E000000000012000000000000000000000000", None)

class DevFailed(Fnorb.orb.CORBA.UserException):
    """ Exception: IDL:Tango/DevFailed:1.0 """

    _FNORB_ID = "IDL:Tango/DevFailed:1.0"

    def __init__(self, _errors):
        """ Constructor. """

        self.errors = _errors
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.errors,)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevFailedevFailed)

class MultiDevFailed(Fnorb.orb.CORBA.UserException):
    """ Exception: IDL:Tango/MultiDevFailed:1.0 """

    _FNORB_ID = "IDL:Tango/MultiDevFailed:1.0"

    def __init__(self, _errors):
        """ Constructor. """

        self.errors = _errors
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.errors,)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/MultiDevFailedultiDevFailed)

class AttributeConfig:
    """ Struct: IDL:Tango/AttributeConfig:1.0 """

    _FNORB_ID = "IDL:Tango/AttributeConfig:1.0"

    def __init__(self, _name, _writable, _data_format, _data_type, _max_dim_x, _max_dim_y, _description, _label, _unit, _standard_unit, _display_unit, _format, _min_value, _max_value, _min_alarm, _max_alarm, _writable_attr_name, _extensions):
        """ Constructor. """

        self.name = _name
        self.writable = _writable
        self.data_format = _data_format
        self.data_type = _data_type
        self.max_dim_x = _max_dim_x
        self.max_dim_y = _max_dim_y
        self.description = _description
        self.label = _label
        self.unit = _unit
        self.standard_unit = _standard_unit
        self.display_unit = _display_unit
        self.format = _format
        self.min_value = _min_value
        self.max_value = _max_value
        self.min_alarm = _min_alarm
        self.max_alarm = _max_alarm
        self.writable_attr_name = _writable_attr_name
        self.extensions = _extensions
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.name, self.writable, self.data_format, self.data_type, self.max_dim_x, self.max_dim_y, self.description, self.label, self.unit, self.standard_unit, self.display_unit, self.format, self.min_value, self.max_value, self.min_alarm, self.max_alarm, self.writable_attr_name, self.extensions)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeConfigttributeConfig)

class AttributeConfig_2:
    """ Struct: IDL:Tango/AttributeConfig_2:1.0 """

    _FNORB_ID = "IDL:Tango/AttributeConfig_2:1.0"

    def __init__(self, _name, _writable, _data_format, _data_type, _max_dim_x, _max_dim_y, _description, _label, _unit, _standard_unit, _display_unit, _format, _min_value, _max_value, _min_alarm, _max_alarm, _writable_attr_name, _level, _extensions):
        """ Constructor. """

        self.name = _name
        self.writable = _writable
        self.data_format = _data_format
        self.data_type = _data_type
        self.max_dim_x = _max_dim_x
        self.max_dim_y = _max_dim_y
        self.description = _description
        self.label = _label
        self.unit = _unit
        self.standard_unit = _standard_unit
        self.display_unit = _display_unit
        self.format = _format
        self.min_value = _min_value
        self.max_value = _max_value
        self.min_alarm = _min_alarm
        self.max_alarm = _max_alarm
        self.writable_attr_name = _writable_attr_name
        self.level = _level
        self.extensions = _extensions
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.name, self.writable, self.data_format, self.data_type, self.max_dim_x, self.max_dim_y, self.description, self.label, self.unit, self.standard_unit, self.display_unit, self.format, self.min_value, self.max_value, self.min_alarm, self.max_alarm, self.writable_attr_name, self.level, self.extensions)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeConfigttributeConfig_2)

class AttributeValue:
    """ Struct: IDL:Tango/AttributeValue:1.0 """

    _FNORB_ID = "IDL:Tango/AttributeValue:1.0"

    def __init__(self, _value, _quality, _time, _name, _dim_x, _dim_y):
        """ Constructor. """

        self.value = _value
        self.quality = _quality
        self.time = _time
        self.name = _name
        self.dim_x = _dim_x
        self.dim_y = _dim_y
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.value, self.quality, self.time, self.name, self.dim_x, self.dim_y)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeValuettributeValue)

class AttributeDim:
    """ Struct: IDL:Tango/AttributeDim:1.0 """

    _FNORB_ID = "IDL:Tango/AttributeDim:1.0"

    def __init__(self, _dim_x, _dim_y):
        """ Constructor. """

        self.dim_x = _dim_x
        self.dim_y = _dim_y
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.dim_x, self.dim_y)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeDim:1.0", "000000000000000F0000005C000000000000001B49444C3A54616E676F2F41747472696275746544696D3A312E3000000000000D41747472696275746544696D00000000000000020000000664696D5F78000000000000030000000664696D5F7900000000000003", AttributeDim)

class AttributeValue_3:
    """ Struct: IDL:Tango/AttributeValue_3:1.0 """

    _FNORB_ID = "IDL:Tango/AttributeValue_3:1.0"

    def __init__(self, _value, _quality, _time, _name, _r_dim, _w_dim, _err_list):
        """ Constructor. """

        self.value = _value
        self.quality = _quality
        self.time = _time
        self.name = _name
        self.r_dim = _r_dim
        self.w_dim = _w_dim
        self.err_list = _err_list
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.value, self.quality, self.time, self.name, self.r_dim, self.w_dim, self.err_list)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeValuettributeValue_3)

# Enum: IDL:Tango/AttributeDataType:1.0
ATT_BOOL = Fnorb.orb.Util.EnumMember("ATT_BOOL", 0)
ATT_SHORT = Fnorb.orb.Util.EnumMember("ATT_SHORT", 1)
ATT_LONG = Fnorb.orb.Util.EnumMember("ATT_LONG", 2)
ATT_LONG64 = Fnorb.orb.Util.EnumMember("ATT_LONG64", 3)
ATT_FLOAT = Fnorb.orb.Util.EnumMember("ATT_FLOAT", 4)
ATT_DOUBLE = Fnorb.orb.Util.EnumMember("ATT_DOUBLE", 5)
ATT_UCHAR = Fnorb.orb.Util.EnumMember("ATT_UCHAR", 6)
ATT_USHORT = Fnorb.orb.Util.EnumMember("ATT_USHORT", 7)
ATT_ULONG = Fnorb.orb.Util.EnumMember("ATT_ULONG", 8)
ATT_ULONG64 = Fnorb.orb.Util.EnumMember("ATT_ULONG64", 9)
ATT_STRING = Fnorb.orb.Util.EnumMember("ATT_STRING", 10)
ATT_STATE = Fnorb.orb.Util.EnumMember("ATT_STATE", 11)
DEVICE_STATE = Fnorb.orb.Util.EnumMember("DEVICE_STATE", 12)
ATT_ENCODED = Fnorb.orb.Util.EnumMember("ATT_ENCODED", 13)
NO_DATA = Fnorb.orb.Util.EnumMember("NO_DATA", 14)
AttributeDataType = Fnorb.orb.Util.Enum("IDL:Tango/AttributeDataType:1.0", [ATT_BOOL, ATT_SHORT, ATT_LONG, ATT_LONG64, ATT_FLOAT, ATT_DOUBLE, ATT_UCHAR, ATT_USHORT, ATT_ULONG, ATT_ULONG64, ATT_STRING, ATT_STATE, DEVICE_STATE, ATT_ENCODED, NO_DATA])

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeDataTypettributeDataType)

class AttrValUnion(Fnorb.orb.Util.Union):
    """ Union: IDL:Tango/AttrValUnion:1.0 """

    _FNORB_ID = "IDL:Tango/AttrValUnion:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttrValUnionttrValUnion)

class AttributeValue_4:
    """ Struct: IDL:Tango/AttributeValue_4:1.0 """

    _FNORB_ID = "IDL:Tango/AttributeValue_4:1.0"

    def __init__(self, _value, _quality, _data_format, _time, _name, _r_dim, _w_dim, _err_list):
        """ Constructor. """

        self.value = _value
        self.quality = _quality
        self.data_format = _data_format
        self.time = _time
        self.name = _name
        self.r_dim = _r_dim
        self.w_dim = _w_dim
        self.err_list = _err_list
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.value, self.quality, self.data_format, self.time, self.name, self.r_dim, self.w_dim, self.err_list)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeValuettributeValue_4)

class ChangeEventProp:
    """ Struct: IDL:Tango/ChangeEventProp:1.0 """

    _FNORB_ID = "IDL:Tango/ChangeEventProp:1.0"

    def __init__(self, _rel_change, _abs_change, _extensions):
        """ Constructor. """

        self.rel_change = _rel_change
        self.abs_change = _abs_change
        self.extensions = _extensions
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.rel_change, self.abs_change, self.extensions)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/ChangeEventProp:1.0", "000000000000000F000000E0000000000000001E49444C3A54616E676F2F4368616E67654576656E7450726F703A312E30000000000000104368616E67654576656E7450726F7000000000030000000B72656C5F6368616E6765000000000012000000000000000B6162735F6368616E6765000000000012000000000000000B657874656E73696F6E7300000000001500000058000000000000002049444C3A54616E676F2F446576566172537472696E6741727261793A312E300000000012446576566172537472696E674172726179000000000000130000001000000000000000120000000000000000", ChangeEventProp)

class PeriodicEventProp:
    """ Struct: IDL:Tango/PeriodicEventProp:1.0 """

    _FNORB_ID = "IDL:Tango/PeriodicEventProp:1.0"

    def __init__(self, _period, _extensions):
        """ Constructor. """

        self.period = _period
        self.extensions = _extensions
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.period, self.extensions)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/PeriodicEventProp:1.0", "000000000000000F000000C8000000000000002049444C3A54616E676F2F506572696F6469634576656E7450726F703A312E300000000012506572696F6469634576656E7450726F700000000000000200000007706572696F64000000000012000000000000000B657874656E73696F6E7300000000001500000058000000000000002049444C3A54616E676F2F446576566172537472696E6741727261793A312E300000000012446576566172537472696E674172726179000000000000130000001000000000000000120000000000000000", PeriodicEventProp)

class ArchiveEventProp:
    """ Struct: IDL:Tango/ArchiveEventProp:1.0 """

    _FNORB_ID = "IDL:Tango/ArchiveEventProp:1.0"

    def __init__(self, _rel_change, _abs_change, _period, _extensions):
        """ Constructor. """

        self.rel_change = _rel_change
        self.abs_change = _abs_change
        self.period = _period
        self.extensions = _extensions
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.rel_change, self.abs_change, self.period, self.extensions)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/ArchiveEventProp:1.0", "000000000000000F000000F8000000000000001F49444C3A54616E676F2F417263686976654576656E7450726F703A312E30000000000011417263686976654576656E7450726F7000000000000000040000000B72656C5F6368616E6765000000000012000000000000000B6162735F6368616E67650000000000120000000000000007706572696F64000000000012000000000000000B657874656E73696F6E7300000000001500000058000000000000002049444C3A54616E676F2F446576566172537472696E6741727261793A312E300000000012446576566172537472696E674172726179000000000000130000001000000000000000120000000000000000", ArchiveEventProp)

class EventProperties:
    """ Struct: IDL:Tango/EventProperties:1.0 """

    _FNORB_ID = "IDL:Tango/EventProperties:1.0"

    def __init__(self, _ch_event, _per_event, _arch_event):
        """ Constructor. """

        self.ch_event = _ch_event
        self.per_event = _per_event
        self.arch_event = _arch_event
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.ch_event, self.per_event, self.arch_event)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/EventPropertiesventProperties)

class AttributeAlarm:
    """ Struct: IDL:Tango/AttributeAlarm:1.0 """

    _FNORB_ID = "IDL:Tango/AttributeAlarm:1.0"

    def __init__(self, _min_alarm, _max_alarm, _min_warning, _max_warning, _delta_t, _delta_val, _extensions):
        """ Constructor. """

        self.min_alarm = _min_alarm
        self.max_alarm = _max_alarm
        self.min_warning = _min_warning
        self.max_warning = _max_warning
        self.delta_t = _delta_t
        self.delta_val = _delta_val
        self.extensions = _extensions
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.min_alarm, self.max_alarm, self.min_warning, self.max_warning, self.delta_t, self.delta_val, self.extensions)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeAlarm:1.0", "000000000000000F0000013C000000000000001D49444C3A54616E676F2F417474726962757465416C61726D3A312E30000000000000000F417474726962757465416C61726D0000000000070000000A6D696E5F616C61726D00000000000012000000000000000A6D61785F616C61726D00000000000012000000000000000C6D696E5F7761726E696E670000000012000000000000000C6D61785F7761726E696E670000000012000000000000000864656C74615F740000000012000000000000000A64656C74615F76616C00000000000012000000000000000B657874656E73696F6E7300000000001500000058000000000000002049444C3A54616E676F2F446576566172537472696E6741727261793A312E300000000012446576566172537472696E674172726179000000000000130000001000000000000000120000000000000000", AttributeAlarm)

class AttributeConfig_3:
    """ Struct: IDL:Tango/AttributeConfig_3:1.0 """

    _FNORB_ID = "IDL:Tango/AttributeConfig_3:1.0"

    def __init__(self, _name, _writable, _data_format, _data_type, _max_dim_x, _max_dim_y, _description, _label, _unit, _standard_unit, _display_unit, _format, _min_value, _max_value, _writable_attr_name, _level, _att_alarm, _event_prop, _extensions, _sys_extensions):
        """ Constructor. """

        self.name = _name
        self.writable = _writable
        self.data_format = _data_format
        self.data_type = _data_type
        self.max_dim_x = _max_dim_x
        self.max_dim_y = _max_dim_y
        self.description = _description
        self.label = _label
        self.unit = _unit
        self.standard_unit = _standard_unit
        self.display_unit = _display_unit
        self.format = _format
        self.min_value = _min_value
        self.max_value = _max_value
        self.writable_attr_name = _writable_attr_name
        self.level = _level
        self.att_alarm = _att_alarm
        self.event_prop = _event_prop
        self.extensions = _extensions
        self.sys_extensions = _sys_extensions
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.name, self.writable, self.data_format, self.data_type, self.max_dim_x, self.max_dim_y, self.description, self.label, self.unit, self.standard_unit, self.display_unit, self.format, self.min_value, self.max_value, self.writable_attr_name, self.level, self.att_alarm, self.event_prop, self.extensions, self.sys_extensions)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeConfigttributeConfig_3)

# Alias: IDL:Tango/AttributeConfigList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeConfigListone)

# Alias: IDL:Tango/AttributeConfigList_2:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeConfigListone)

# Alias: IDL:Tango/AttributeConfigList_3:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeConfigListone)

# Alias: IDL:Tango/AttributeValueList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeValueListone)

# Alias: IDL:Tango/AttributeValueList_3:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeValueListone)

# Alias: IDL:Tango/AttributeValueList_4:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeValueList_4:1.0", "000000000000001300000EF0000000000000000F00000EE0000000000000001F49444C3A54616E676F2F41747472696275746556616C75655F343A312E3000000000001141747472696275746556616C75655F3400000000000000080000000676616C75650000000000001000000AA0000000000000001B49444C3A54616E676F2F4174747256616C556E696F6E3A312E3000000000000D4174747256616C556E696F6E000000000000001100000134000000000000002049444C3A54616E676F2F41747472696275746544617461547970653A312E30000000001241747472696275746544617461547970650000000000000F000000094154545F424F4F4C000000000000000A4154545F53484F5254000000000000094154545F4C4F4E47000000000000000B4154545F4C4F4E47363400000000000A4154545F464C4F41540000000000000B4154545F444F55424C4500000000000A4154545F55434841520000000000000B4154545F5553484F525400000000000A4154545F554C4F4E470000000000000C4154545F554C4F4E473634000000000B4154545F535452494E4700000000000A4154545F53544154450000000000000D4445564943455F5354415445000000000000000C4154545F454E434F44454400000000084E4F5F4441544100FFFFFFFF0000000F000000000000000F626F6F6C5F6174745F76616C756500000000001500000058000000000000002149444C3A54616E676F2F446576566172426F6F6C65616E41727261793A312E300000000000000013446576566172426F6F6C65616E41727261790000000000130000000C000000000000000800000000000000010000001073686F72745F6174745F76616C7565000000001500000054000000000000001F49444C3A54616E676F2F44657656617253686F727441727261793A312E3000000000001144657656617253686F7274417272617900000000000000130000000C000000000000000200000000000000020000000F6C6F6E675F6174745F76616C756500000000001500000050000000000000001E49444C3A54616E676F2F4465765661724C6F6E6741727261793A312E30000000000000104465765661724C6F6E67417272617900000000130000000C00000000000000030000000000000003000000116C6F6E6736345F6174745F76616C7565000000000000001500000054000000000000002049444C3A54616E676F2F4465765661724C6F6E67363441727261793A312E3000000000124465765661724C6F6E6736344172726179000000000000130000000C0000000000000017000000000000000400000010666C6F61745F6174745F76616C7565000000001500000054000000000000001F49444C3A54616E676F2F446576566172466C6F617441727261793A312E30000000000011446576566172466C6F6174417272617900000000000000130000000C0000000000000006000000000000000500000011646F75626C655F6174745F76616C7565000000000000001500000054000000000000002049444C3A54616E676F2F446576566172446F75626C6541727261793A312E300000000012446576566172446F75626C654172726179000000000000130000000C000000000000000700000000000000060000001075636861725F6174745F76616C7565000000001500000050000000000000001E49444C3A54616E676F2F4465765661724368617241727261793A312E300000000000001044657656617243686172417272617900000000130000000C000000000000000A0000000000000007000000117573686F72745F6174745F76616C7565000000000000001500000054000000000000002049444C3A54616E676F2F4465765661725553686F727441727261793A312E3000000000124465765661725553686F72744172726179000000000000130000000C0000000000000004000000000000000800000010756C6F6E675F6174745F76616C7565000000001500000054000000000000001F49444C3A54616E676F2F446576566172554C6F6E6741727261793A312E30000000000011446576566172554C6F6E67417272617900000000000000130000000C0000000000000005000000000000000900000012756C6F6E6736345F6174745F76616C75650000000000001500000058000000000000002149444C3A54616E676F2F446576566172554C6F6E67363441727261793A312E300000000000000013446576566172554C6F6E67363441727261790000000000130000000C0000000000000005000000000000000A00000011737472696E675F6174745F76616C7565000000000000001500000058000000000000002049444C3A54616E676F2F446576566172537472696E6741727261793A312E300000000012446576566172537472696E6741727261790000000000001300000010000000000000001200000000000000000000000B0000001073746174655F6174745F76616C756500000000150000012C000000000000001F49444C3A54616E676F2F446576566172537461746541727261793A312E30000000000011446576566172537461746541727261790000000000000013000000E40000000000000011000000D4000000000000001749444C3A54616E676F2F44657653746174653A312E300000000000094465765374617465000000000000000E000000034F4E0000000000044F46460000000006434C4F5345000000000000054F50454E0000000000000007494E534552540000000000084558545241435400000000074D4F56494E470000000000085354414E44425900000000064641554C5400000000000005494E4954000000000000000852554E4E494E470000000006414C41524D0000000000000844495341424C450000000008554E4B4E4F574E00000000000000000C0000000E6465765F73746174655F61747400000000000011000000D4000000000000001749444C3A54616E676F2F44657653746174653A312E300000000000094465765374617465000000000000000E000000034F4E0000000000044F46460000000006434C4F5345000000000000054F50454E0000000000000007494E534552540000000000084558545241435400000000074D4F56494E470000000000085354414E44425900000000064641554C5400000000000005494E4954000000000000000852554E4E494E470000000006414C41524D0000000000000844495341424C450000000008554E4B4E4F574E000000000D00000012656E636F6465645F6174745F76616C75650000000000001500000154000000000000002149444C3A54616E676F2F446576566172456E636F64656441727261793A312E300000000000000013446576566172456E636F646564417272617900000000001300000108000000000000000F000000F8000000000000001949444C3A54616E676F2F446576456E636F6465643A312E30000000000000000B446576456E636F6465640000000000020000000F656E636F6465645F666F726D617400000000001500000038000000000000001849444C3A54616E676F2F446576537472696E673A312E30000000000A446576537472696E6700000000000012000000000000000D656E636F6465645F64617461000000000000001500000050000000000000001E49444C3A54616E676F2F4465765661724368617241727261793A312E300000000000001044657656617243686172417272617900000000130000000C000000000000000A00000000000000000000000E0000000E756E696F6E5F6E6F5F646174610000000000001500000038000000000000001949444C3A54616E676F2F446576426F6F6C65616E3A312E30000000000000000B446576426F6F6C65616E000000000008000000087175616C697479000000001100000091000000000000001A49444C3A54616E676F2F417474725175616C6974793A312E300000000000000C417474725175616C69747900000000050000000B415454525F56414C494400000000000D415454525F494E56414C4944000000000000000B415454525F414C41524D00000000000E415454525F4348414E47494E470000000000000D415454525F5741524E494E47000000000000000C646174615F666F726D6174000000001100000078000000000000001D49444C3A54616E676F2F4174747244617461466F726D61743A312E30000000000000000F4174747244617461466F726D6174000000000004000000075343414C4152000000000009535045435452554D0000000000000006494D4147450000000000000C464D545F554E4B4E4F574E000000000574696D65000000000000000F00000060000000000000001649444C3A54616E676F2F54696D6556616C3A312E300000000000000854696D6556616C00000000030000000774765F7365630000000000030000000874765F7573656300000000030000000874765F6E7365630000000003000000056E616D6500000000000000120000000000000006725F64696D0000000000000F0000005C000000000000001B49444C3A54616E676F2F41747472696275746544696D3A312E3000000000000D41747472696275746544696D00000000000000020000000664696D5F78000000000000030000000664696D5F790000000000000300000006775F64696D0000000000000F0000005C000000000000001B49444C3A54616E676F2F41747472696275746544696D3A312E3000000000000D41747472696275746544696D00000000000000020000000664696D5F78000000000000030000000664696D5F7900000000000003000000096572725F6C697374000000000000001500000130000000000000001B49444C3A54616E676F2F4465764572726F724C6973743A312E3000000000000D4465764572726F724C6973740000000000000013000000F0000000000000000F000000E0000000000000001749444C3A54616E676F2F4465764572726F723A312E300000000000094465764572726F72000000000000000400000007726561736F6E00000000001200000000000000097365766572697479000000000000001100000056000000000000001A49444C3A54616E676F2F45727253657665726974793A312E300000000000000C45727253657665726974790000000003000000055741524E0000000000000004455252000000000650414E49430000000000000564657363000000000000001200000000000000076F726967696E000000000012000000000000000000000000", None)

class AttDataReady:
    """ Struct: IDL:Tango/AttDataReady:1.0 """

    _FNORB_ID = "IDL:Tango/AttDataReady:1.0"

    def __init__(self, _name, _data_type, _ctr):
        """ Constructor. """

        self.name = _name
        self.data_type = _data_type
        self.ctr = _ctr
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.name, self.data_type, self.ctr)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttDataReady:1.0", "000000000000000F00000070000000000000001B49444C3A54616E676F2F4174744461746152656164793A312E3000000000000D4174744461746152656164790000000000000003000000056E616D650000000000000012000000000000000A646174615F7479706500000000000003000000046374720000000003", AttDataReady)

class DevInfo:
    """ Struct: IDL:Tango/DevInfo:1.0 """

    _FNORB_ID = "IDL:Tango/DevInfo:1.0"

    def __init__(self, _dev_class, _server_id, _server_host, _server_version, _doc_url):
        """ Constructor. """

        self.dev_class = _dev_class
        self.server_id = _server_id
        self.server_host = _server_host
        self.server_version = _server_version
        self.doc_url = _doc_url
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.dev_class, self.server_id, self.server_host, self.server_version, self.doc_url)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevInfo:1.0", "000000000000000F000000A4000000000000001649444C3A54616E676F2F446576496E666F3A312E3000000000000008446576496E666F00000000050000000A6465765F636C61737300000000000012000000000000000A7365727665725F696400000000000012000000000000000C7365727665725F686F73740000000012000000000000000F7365727665725F76657273696F6E00000000000300000008646F635F75726C000000001200000000", DevInfo)

class DevInfo_3:
    """ Struct: IDL:Tango/DevInfo_3:1.0 """

    _FNORB_ID = "IDL:Tango/DevInfo_3:1.0"

    def __init__(self, _dev_class, _server_id, _server_host, _server_version, _doc_url, _dev_type):
        """ Constructor. """

        self.dev_class = _dev_class
        self.server_id = _server_id
        self.server_host = _server_host
        self.server_version = _server_version
        self.doc_url = _doc_url
        self.dev_type = _dev_type
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.dev_class, self.server_id, self.server_host, self.server_version, self.doc_url, self.dev_type)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevInfo_3:1.0", "000000000000000F000000C0000000000000001849444C3A54616E676F2F446576496E666F5F333A312E30000000000A446576496E666F5F33000000000000060000000A6465765F636C61737300000000000012000000000000000A7365727665725F696400000000000012000000000000000C7365727665725F686F73740000000012000000000000000F7365727665725F76657273696F6E00000000000300000008646F635F75726C000000001200000000000000096465765F74797065000000000000001200000000", DevInfo_3)

class DevCmdHistory:
    """ Struct: IDL:Tango/DevCmdHistory:1.0 """

    _FNORB_ID = "IDL:Tango/DevCmdHistory:1.0"

    def __init__(self, _time, _cmd_failed, _value, _errors):
        """ Constructor. """

        self.time = _time
        self.cmd_failed = _cmd_failed
        self.value = _value
        self.errors = _errors
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.time, self.cmd_failed, self.value, self.errors)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevCmdHistoryevCmdHistory)

# Alias: IDL:Tango/DevCmdHistoryList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevCmdHistoryList:1.0", "000000000000001300000228000000000000000F00000218000000000000001C49444C3A54616E676F2F446576436D64486973746F72793A312E30000000000E446576436D64486973746F7279000000000000040000000574696D65000000000000000F00000060000000000000001649444C3A54616E676F2F54696D6556616C3A312E300000000000000854696D6556616C00000000030000000774765F7365630000000000030000000874765F7573656300000000030000000874765F6E73656300000000030000000B636D645F6661696C65640000000000080000000676616C75650000000000000B000000076572726F727300000000001500000130000000000000001B49444C3A54616E676F2F4465764572726F724C6973743A312E3000000000000D4465764572726F724C6973740000000000000013000000F0000000000000000F000000E0000000000000001749444C3A54616E676F2F4465764572726F723A312E300000000000094465764572726F72000000000000000400000007726561736F6E00000000001200000000000000097365766572697479000000000000001100000056000000000000001A49444C3A54616E676F2F45727253657665726974793A312E300000000000000C45727253657665726974790000000003000000055741524E0000000000000004455252000000000650414E49430000000000000564657363000000000000001200000000000000076F726967696E000000000012000000000000000000000000", None)

class DevAttrHistory:
    """ Struct: IDL:Tango/DevAttrHistory:1.0 """

    _FNORB_ID = "IDL:Tango/DevAttrHistory:1.0"

    def __init__(self, _attr_failed, _value, _errors):
        """ Constructor. """

        self.attr_failed = _attr_failed
        self.value = _value
        self.errors = _errors
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.attr_failed, self.value, self.errors)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevAttrHistoryevAttrHistory)

class DevAttrHistory_3:
    """ Struct: IDL:Tango/DevAttrHistory_3:1.0 """

    _FNORB_ID = "IDL:Tango/DevAttrHistory_3:1.0"

    def __init__(self, _attr_failed, _value):
        """ Constructor. """

        self.attr_failed = _attr_failed
        self.value = _value
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.attr_failed, self.value)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevAttrHistoryevAttrHistory_3)

class EltInArray:
    """ Struct: IDL:Tango/EltInArray:1.0 """

    _FNORB_ID = "IDL:Tango/EltInArray:1.0"

    def __init__(self, _start, _nb_elt):
        """ Constructor. """

        self.start = _start
        self.nb_elt = _nb_elt
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.start, self.nb_elt)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/EltInArray:1.0", "000000000000000F00000058000000000000001949444C3A54616E676F2F456C74496E41727261793A312E30000000000000000B456C74496E417272617900000000000200000006737461727400000000000003000000076E625F656C74000000000003", EltInArray)

# Alias: IDL:Tango/EltInArrayList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/EltInArrayList:1.0", "000000000000001300000068000000000000000F00000058000000000000001949444C3A54616E676F2F456C74496E41727261793A312E30000000000000000B456C74496E417272617900000000000200000006737461727400000000000003000000076E625F656C7400000000000300000000", None)

# Alias: IDL:Tango/TimeValList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/TimeValList:1.0", "000000000000001300000070000000000000000F00000060000000000000001649444C3A54616E676F2F54696D6556616C3A312E300000000000000854696D6556616C00000000030000000774765F7365630000000000030000000874765F7573656300000000030000000874765F6E736563000000000300000000", None)

# Alias: IDL:Tango/AttrQualityList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttrQualityList:1.0", "0000000000000013000000A4000000000000001100000091000000000000001A49444C3A54616E676F2F417474725175616C6974793A312E300000000000000C417474725175616C69747900000000050000000B415454525F56414C494400000000000D415454525F494E56414C4944000000000000000B415454525F414C41524D00000000000E415454525F4348414E47494E470000000000000D415454525F5741524E494E470000000000000000", None)

# Alias: IDL:Tango/AttributeDimList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/AttributeDimList:1.0", "00000000000000130000006C000000000000000F0000005C000000000000001B49444C3A54616E676F2F41747472696275746544696D3A312E3000000000000D41747472696275746544696D00000000000000020000000664696D5F78000000000000030000000664696D5F790000000000000300000000", None)

# Alias: IDL:Tango/DevErrorListList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevErrorListListone)

class DevAttrHistory_4:
    """ Struct: IDL:Tango/DevAttrHistory_4:1.0 """

    _FNORB_ID = "IDL:Tango/DevAttrHistory_4:1.0"

    def __init__(self, _name, _dates, _value, _quals, _quals_array, _r_dims, _r_dims_array, _w_dims, _w_dims_array, _errors, _errors_array):
        """ Constructor. """

        self.name = _name
        self.dates = _dates
        self.value = _value
        self.quals = _quals
        self.quals_array = _quals_array
        self.r_dims = _r_dims
        self.r_dims_array = _r_dims_array
        self.w_dims = _w_dims
        self.w_dims_array = _w_dims_array
        self.errors = _errors
        self.errors_array = _errors_array
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.name, self.dates, self.value, self.quals, self.quals_array, self.r_dims, self.r_dims_array, self.w_dims, self.w_dims_array, self.errors, self.errors_array)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevAttrHistory_4:1.0", "000000000000000F0000086C000000000000001F49444C3A54616E676F2F44657641747472486973746F72795F343A312E3000000000001144657641747472486973746F72795F34000000000000000B000000056E616D6500000000000000120000000000000006646174657300000000000015000000AC000000000000001A49444C3A54616E676F2F54696D6556616C4C6973743A312E300000000000000C54696D6556616C4C697374000000001300000070000000000000000F00000060000000000000001649444C3A54616E676F2F54696D6556616C3A312E300000000000000854696D6556616C00000000030000000774765F7365630000000000030000000874765F7573656300000000030000000874765F6E7365630000000003000000000000000676616C75650000000000000B000000067175616C7300000000000015000000E8000000000000001E49444C3A54616E676F2F417474725175616C6974794C6973743A312E3000000000000010417474725175616C6974794C6973740000000013000000A4000000000000001100000091000000000000001A49444C3A54616E676F2F417474725175616C6974793A312E300000000000000C417474725175616C69747900000000050000000B415454525F56414C494400000000000D415454525F494E56414C4944000000000000000B415454525F414C41524D00000000000E415454525F4348414E47494E470000000000000D415454525F5741524E494E4700000000000000000000000C7175616C735F61727261790000000015000000AC000000000000001D49444C3A54616E676F2F456C74496E41727261794C6973743A312E30000000000000000F456C74496E41727261794C69737400000000001300000068000000000000000F00000058000000000000001949444C3A54616E676F2F456C74496E41727261793A312E30000000000000000B456C74496E417272617900000000000200000006737461727400000000000003000000076E625F656C740000000000030000000000000007725F64696D73000000000015000000B4000000000000001F49444C3A54616E676F2F41747472696275746544696D4C6973743A312E3000000000001141747472696275746544696D4C69737400000000000000130000006C000000000000000F0000005C000000000000001B49444C3A54616E676F2F41747472696275746544696D3A312E3000000000000D41747472696275746544696D00000000000000020000000664696D5F78000000000000030000000664696D5F7900000000000003000000000000000D725F64696D735F61727261790000000000000015000000AC000000000000001D49444C3A54616E676F2F456C74496E41727261794C6973743A312E30000000000000000F456C74496E41727261794C69737400000000001300000068000000000000000F00000058000000000000001949444C3A54616E676F2F456C74496E41727261793A312E30000000000000000B456C74496E417272617900000000000200000006737461727400000000000003000000076E625F656C740000000000030000000000000007775F64696D73000000000015000000B4000000000000001F49444C3A54616E676F2F41747472696275746544696D4C6973743A312E3000000000001141747472696275746544696D4C69737400000000000000130000006C000000000000000F0000005C000000000000001B49444C3A54616E676F2F41747472696275746544696D3A312E3000000000000D41747472696275746544696D00000000000000020000000664696D5F78000000000000030000000664696D5F7900000000000003000000000000000D775F64696D735F61727261790000000000000015000000AC000000000000001D49444C3A54616E676F2F456C74496E41727261794C6973743A312E30000000000000000F456C74496E41727261794C69737400000000001300000068000000000000000F00000058000000000000001949444C3A54616E676F2F456C74496E41727261793A312E30000000000000000B456C74496E417272617900000000000200000006737461727400000000000003000000076E625F656C7400000000000300000000000000076572726F727300000000001500000188000000000000001F49444C3A54616E676F2F4465764572726F724C6973744C6973743A312E300000000000114465764572726F724C6973744C697374000000000000001300000140000000000000001500000130000000000000001B49444C3A54616E676F2F4465764572726F724C6973743A312E3000000000000D4465764572726F724C6973740000000000000013000000F0000000000000000F000000E0000000000000001749444C3A54616E676F2F4465764572726F723A312E300000000000094465764572726F72000000000000000400000007726561736F6E00000000001200000000000000097365766572697479000000000000001100000056000000000000001A49444C3A54616E676F2F45727253657665726974793A312E300000000000000C45727253657665726974790000000003000000055741524E0000000000000004455252000000000650414E49430000000000000564657363000000000000001200000000000000076F726967696E0000000000120000000000000000000000000000000D6572726F72735F61727261790000000000000015000000AC000000000000001D49444C3A54616E676F2F456C74496E41727261794C6973743A312E30000000000000000F456C74496E41727261794C69737400000000001300000068000000000000000F00000058000000000000001949444C3A54616E676F2F456C74496E41727261793A312E30000000000000000B456C74496E417272617900000000000200000006737461727400000000000003000000076E625F656C7400000000000300000000", DevAttrHistory_4)

class DevCmdHistory_4:
    """ Struct: IDL:Tango/DevCmdHistory_4:1.0 """

    _FNORB_ID = "IDL:Tango/DevCmdHistory_4:1.0"

    def __init__(self, _dates, _value, _dims, _dims_array, _errors, _errors_array, _cmd_type):
        """ Constructor. """

        self.dates = _dates
        self.value = _value
        self.dims = _dims
        self.dims_array = _dims_array
        self.errors = _errors
        self.errors_array = _errors_array
        self.cmd_type = _cmd_type
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.dates, self.value, self.dims, self.dims_array, self.errors, self.errors_array, self.cmd_type)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevCmdHistoryevCmdHistory_4)

# Alias: IDL:Tango/DevAttrHistoryList:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevAttrHistoryListone)

# Alias: IDL:Tango/DevAttrHistoryList_3:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/DevAttrHistoryListone)

class ZmqCallInfo:
    """ Struct: IDL:Tango/ZmqCallInfo:1.0 """

    _FNORB_ID = "IDL:Tango/ZmqCallInfo:1.0"

    def __init__(self, _version, _ctr, _method_name, _oid, _call_is_except):
        """ Constructor. """

        self.version = _version
        self.ctr = _ctr
        self.method_name = _method_name
        self.oid = _oid
        self.call_is_except = _call_is_except
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.version, self.ctr, self.method_name, self.oid, self.call_is_except)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/ZmqCallInfo:1.0", "000000000000000F000000E4000000000000001A49444C3A54616E676F2F5A6D7143616C6C496E666F3A312E300000000000000C5A6D7143616C6C496E666F00000000050000000876657273696F6E00000000030000000463747200000000050000000C6D6574686F645F6E616D65000000001200000000000000046F6964000000001500000050000000000000001E49444C3A54616E676F2F4465765661724368617241727261793A312E300000000000001044657656617243686172417272617900000000130000000C000000000000000A000000000000000F63616C6C5F69735F657863657074000000000008", ZmqCallInfo)

class Device(Fnorb.orb.CORBA.Object):
    """ Interface: IDL:Tango/Device:1.0 """

    _FNORB_ID = "IDL:Tango/Device:1.0"

    def _get_name(self):
        """ Attribute: IDL:Tango/Device/name:1.0 """

        # Typecode for the attribute value.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_string)

        # Create a request object.
        request = self._create_request("_get_name", [], outputs, [])

        # Make the request!
        request.invoke()

        # Return the attribute value.
        return request.results()

    def _get_description(self):
        """ Attribute: IDL:Tango/Device/description:1.0 """

        # Typecode for the attribute value.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_string)

        # Create a request object.
        request = self._create_request("_get_description", [], outputs, [])

        # Make the request!
        request.invoke()

        # Return the attribute value.
        return request.results()

    def _get_state(self):
        """ Attribute: IDL:Tango/Device/state:1.0 """

        # Typecode for the attribute value.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevState:1.0"))

        # Create a request object.
        request = self._create_request("_get_state", [], outputs, [])

        # Make the request!
        request.invoke()

        # Return the attribute value.
        return request.results()

    def _get_status(self):
        """ Attribute: IDL:Tango/Device/status:1.0 """

        # Typecode for the attribute value.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_string)

        # Create a request object.
        request = self._create_request("_get_status", [], outputs, [])

        # Make the request!
        request.invoke()

        # Return the attribute value.
        return request.results()

    def _get_adm_name(self):
        """ Attribute: IDL:Tango/Device/adm_name:1.0 """

        # Typecode for the attribute value.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_string)

        # Create a request object.
        request = self._create_request("_get_adm_name", [], outputs, [])

        # Make the request!
        request.invoke()

        # Return the attribute value.
        return request.results()

    def command_inout(self, *args, **kw):
        """ Operation: IDL:Tango/Device/command_inout:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)
        inputs.append(Fnorb.orb.CORBA.TC_any)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_any)

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_inout", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def get_attribute_config(self, *args, **kw):
        """ Operation: IDL:Tango/Device/get_attribute_config:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevVarStringArray:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeConfigList:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("get_attribute_config", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def set_attribute_config(self, *args, **kw):
        """ Operation: IDL:Tango/Device/set_attribute_config:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeConfigList:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("set_attribute_config", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def read_attributes(self, *args, **kw):
        """ Operation: IDL:Tango/Device/read_attributes:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevVarStringArray:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("read_attributes", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def write_attributes(self, *args, **kw):
        """ Operation: IDL:Tango/Device/write_attributes:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("write_attributes", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def ping(self, *args, **kw):
        """ Operation: IDL:Tango/Device/ping:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("ping", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def black_box(self, *args, **kw):
        """ Operation: IDL:Tango/Device/black_box:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_long)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevVarStringArray:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("black_box", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def info(self, *args, **kw):
        """ Operation: IDL:Tango/Device/info:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevInfo:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("info", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def command_list_query(self, *args, **kw):
        """ Operation: IDL:Tango/Device/command_list_query:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevCmdInfoList:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_list_query", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def command_query(self, *args, **kw):
        """ Operation: IDL:Tango/Device/command_query:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevCmdInfo:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_query", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/Device:1.0", "000000000000000E0000002B000000000000001549444C3A54616E676F2F4465766963653A312E30000000000000000744657669636500", Device)

class Device_2(Fnorb.orb.CORBA.Object, Device):
    """ Interface: IDL:Tango/Device_2:1.0 """

    _FNORB_ID = "IDL:Tango/Device_2:1.0"

    def command_inout_2(self, *args, **kw):
        """ Operation: IDL:Tango/Device_2/command_inout_2:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)
        inputs.append(Fnorb.orb.CORBA.TC_any)
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevSource:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_any)

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_inout_2", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def read_attributes_2(self, *args, **kw):
        """ Operation: IDL:Tango/Device_2/read_attributes_2:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevVarStringArray:1.0"))
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevSource:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("read_attributes_2", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def get_attribute_config_2(self, *args, **kw):
        """ Operation: IDL:Tango/Device_2/get_attribute_config_2:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevVarStringArray:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeConfigList_2:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("get_attribute_config_2", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def command_list_query_2(self, *args, **kw):
        """ Operation: IDL:Tango/Device_2/command_list_query_2:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevCmdInfoList_2:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_list_query_2", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def command_query_2(self, *args, **kw):
        """ Operation: IDL:Tango/Device_2/command_query_2:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevCmdInfo_2:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_query_2", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def command_inout_history_2(self, *args, **kw):
        """ Operation: IDL:Tango/Device_2/command_inout_history_2:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)
        inputs.append(Fnorb.orb.CORBA.TC_long)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevCmdHistoryList:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_inout_history_2", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def read_attribute_history_2(self, *args, **kw):
        """ Operation: IDL:Tango/Device_2/read_attribute_history_2:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)
        inputs.append(Fnorb.orb.CORBA.TC_long)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevAttrHistoryList:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("read_attribute_history_2", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/Device_2:1.0", "000000000000000E0000002D000000000000001749444C3A54616E676F2F4465766963655F323A312E300000000000094465766963655F3200", Device_2)

class Device_3(Fnorb.orb.CORBA.Object, Device_2):
    """ Interface: IDL:Tango/Device_3:1.0 """

    _FNORB_ID = "IDL:Tango/Device_3:1.0"

    def read_attributes_3(self, *args, **kw):
        """ Operation: IDL:Tango/Device_3/read_attributes_3:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevVarStringArray:1.0"))
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevSource:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList_3:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("read_attributes_3", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def write_attributes_3(self, *args, **kw):
        """ Operation: IDL:Tango/Device_3/write_attributes_3:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/MultiDevFailed:1.0"))

        # Create a request object.
        request = self._create_request("write_attributes_3", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def read_attribute_history_3(self, *args, **kw):
        """ Operation: IDL:Tango/Device_3/read_attribute_history_3:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)
        inputs.append(Fnorb.orb.CORBA.TC_long)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevAttrHistoryList_3:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("read_attribute_history_3", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def info_3(self, *args, **kw):
        """ Operation: IDL:Tango/Device_3/info_3:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevInfo_3:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("info_3", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def get_attribute_config_3(self, *args, **kw):
        """ Operation: IDL:Tango/Device_3/get_attribute_config_3:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevVarStringArray:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeConfigList_3:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("get_attribute_config_3", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def set_attribute_config_3(self, *args, **kw):
        """ Operation: IDL:Tango/Device_3/set_attribute_config_3:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeConfigList_3:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("set_attribute_config_3", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/Device_3:1.0", "000000000000000E0000002D000000000000001749444C3A54616E676F2F4465766963655F333A312E300000000000094465766963655F3300", Device_3)

class Device_4(Fnorb.orb.CORBA.Object, Device_3):
    """ Interface: IDL:Tango/Device_4:1.0 """

    _FNORB_ID = "IDL:Tango/Device_4:1.0"

    def read_attribute_history_4(self, *args, **kw):
        """ Operation: IDL:Tango/Device_4/read_attribute_history_4:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)
        inputs.append(Fnorb.orb.CORBA.TC_long)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevAttrHistory_4:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("read_attribute_history_4", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def command_inout_history_4(self, *args, **kw):
        """ Operation: IDL:Tango/Device_4/command_inout_history_4:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)
        inputs.append(Fnorb.orb.CORBA.TC_long)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevCmdHistory_4:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_inout_history_4", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def command_inout_4(self, *args, **kw):
        """ Operation: IDL:Tango/Device_4/command_inout_4:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)
        inputs.append(Fnorb.orb.CORBA.TC_any)
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevSource:1.0"))
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/ClntIdent:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_any)

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("command_inout_4", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def read_attributes_4(self, *args, **kw):
        """ Operation: IDL:Tango/Device_4/read_attributes_4:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevVarStringArray:1.0"))
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevSource:1.0"))
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/ClntIdent:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList_4:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("read_attributes_4", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def write_attributes_4(self, *args, **kw):
        """ Operation: IDL:Tango/Device_4/write_attributes_4:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList_4:1.0"))
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/ClntIdent:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/MultiDevFailed:1.0"))

        # Create a request object.
        request = self._create_request("write_attributes_4", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def set_attribute_config_4(self, *args, **kw):
        """ Operation: IDL:Tango/Device_4/set_attribute_config_4:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeConfigList_3:1.0"))
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/ClntIdent:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))

        # Create a request object.
        request = self._create_request("set_attribute_config_4", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def write_read_attributes_4(self, *args, **kw):
        """ Operation: IDL:Tango/Device_4/write_read_attributes_4:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList_4:1.0"))
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/ClntIdent:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:Tango/AttributeValueList_4:1.0"))

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/DevFailed:1.0"))
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:Tango/MultiDevFailed:1.0"))

        # Create a request object.
        request = self._create_request("write_read_attributes_4", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:Tango/Device_4:1.0", "000000000000000E0000002D000000000000001749444C3A54616E676F2F4465766963655F343A312E300000000000094465766963655F3400", Device_4)

#############################################################################
