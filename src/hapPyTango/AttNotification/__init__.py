""" Module: IDL:att.com/AttNotification:1.0

Automagically generated by:-

The ORB called Fnorb v1.1.Return.of.Fnorb

"""

_FNORB_ID = "IDL:att.com/AttNotification:1.0"

# Fnorb modules.
import Fnorb.orb.CORBA
import Fnorb.orb.TypeManager
import Fnorb.orb.Util

# Alias: IDL:att.com/AttNotification/IactSeq:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/IactSeq:1.0", "000000000000001300000054000000000000000E00000044000000000000002C49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F496E7465726163746976653A312E30000000000C496E7465726163746976650000000000", None)

# Alias: IDL:att.com/AttNotification/NameSeq:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/NameSeq:1.0", "00000000000000130000001000000000000000120000000000000000", None)

class Interactive(Fnorb.orb.CORBA.Object):
    """ Interface: IDL:att.com/AttNotification/Interactive:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/Interactive:1.0"

    def do_command(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Interactive/do_command:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_string)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_string)
        outputs.append(Fnorb.orb.CORBA.TC_boolean)
        outputs.append(Fnorb.orb.CORBA.TC_boolean)
        outputs.append(Fnorb.orb.CORBA.TC_Object)

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("do_command", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def my_name(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Interactive/my_name:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:att.com/AttNotification/NameSeq:1.0"))

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("my_name", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def child_names(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Interactive/child_names:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:att.com/AttNotification/NameSeq:1.0"))

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("child_names", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def children(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Interactive/children:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.TC_boolean)

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:att.com/AttNotification/IactSeq:1.0"))

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("children", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def safe_cleanup(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Interactive/safe_cleanup:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_boolean)

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("safe_cleanup", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/Interactive:1.0", "000000000000000E00000044000000000000002C49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F496E7465726163746976653A312E30000000000C496E74657261637469766500", Interactive)

# Import base interface packages.
import CosEventChannelAdmin

class CosEvProxyPushSupplier(Fnorb.orb.CORBA.Object, Interactive, CosEventChannelAdmin.ProxyPushSupplier):
    """ Interface: IDL:att.com/AttNotification/CosEvProxyPushSupplier:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/CosEvProxyPushSupplier:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/CosEvProxyPushSupplier:1.0", "000000000000000E0000005B000000000000003749444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F436F73457650726F787950757368537570706C6965723A312E30000000000017436F73457650726F787950757368537570706C69657200", CosEvProxyPushSupplier)

# Import base interface packages.
import CosEventChannelAdmin

class CosEvProxyPullSupplier(Fnorb.orb.CORBA.Object, Interactive, CosEventChannelAdmin.ProxyPullSupplier):
    """ Interface: IDL:att.com/AttNotification/CosEvProxyPullSupplier:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/CosEvProxyPullSupplier:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/CosEvProxyPullSupplier:1.0", "000000000000000E0000005B000000000000003749444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F436F73457650726F787950756C6C537570706C6965723A312E30000000000017436F73457650726F787950756C6C537570706C69657200", CosEvProxyPullSupplier)

# Import base interface packages.
import CosEventChannelAdmin

class CosEvProxyPushConsumer(Fnorb.orb.CORBA.Object, Interactive, CosEventChannelAdmin.ProxyPushConsumer):
    """ Interface: IDL:att.com/AttNotification/CosEvProxyPushConsumer:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/CosEvProxyPushConsumer:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/CosEvProxyPushConsumer:1.0", "000000000000000E0000005B000000000000003749444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F436F73457650726F787950757368436F6E73756D65723A312E30000000000017436F73457650726F787950757368436F6E73756D657200", CosEvProxyPushConsumer)

# Import base interface packages.
import CosEventChannelAdmin

class CosEvProxyPullConsumer(Fnorb.orb.CORBA.Object, Interactive, CosEventChannelAdmin.ProxyPullConsumer):
    """ Interface: IDL:att.com/AttNotification/CosEvProxyPullConsumer:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/CosEvProxyPullConsumer:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/CosEvProxyPullConsumer:1.0", "000000000000000E0000005B000000000000003749444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F436F73457650726F787950756C6C436F6E73756D65723A312E30000000000017436F73457650726F787950756C6C436F6E73756D657200", CosEvProxyPullConsumer)

# Import base interface packages.
import CosNotifyChannelAdmin

class ProxyPushSupplier(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.ProxyPushSupplier):
    """ Interface: IDL:att.com/AttNotification/ProxyPushSupplier:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/ProxyPushSupplier:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/ProxyPushSupplier:1.0", "000000000000000E00000052000000000000003249444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F50726F787950757368537570706C6965723A312E300000000000001250726F787950757368537570706C69657200", ProxyPushSupplier)

# Import base interface packages.
import CosNotifyChannelAdmin

class ProxyPullSupplier(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.ProxyPullSupplier):
    """ Interface: IDL:att.com/AttNotification/ProxyPullSupplier:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/ProxyPullSupplier:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/ProxyPullSupplier:1.0", "000000000000000E00000052000000000000003249444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F50726F787950756C6C537570706C6965723A312E300000000000001250726F787950756C6C537570706C69657200", ProxyPullSupplier)

# Import base interface packages.
import CosNotifyChannelAdmin

class ProxyPushConsumer(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.ProxyPushConsumer):
    """ Interface: IDL:att.com/AttNotification/ProxyPushConsumer:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/ProxyPushConsumer:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/ProxyPushConsumer:1.0", "000000000000000E00000052000000000000003249444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F50726F787950757368436F6E73756D65723A312E300000000000001250726F787950757368436F6E73756D657200", ProxyPushConsumer)

# Import base interface packages.
import CosNotifyChannelAdmin

class ProxyPullConsumer(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.ProxyPullConsumer):
    """ Interface: IDL:att.com/AttNotification/ProxyPullConsumer:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/ProxyPullConsumer:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/ProxyPullConsumer:1.0", "000000000000000E00000052000000000000003249444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F50726F787950756C6C436F6E73756D65723A312E300000000000001250726F787950756C6C436F6E73756D657200", ProxyPullConsumer)

# Import base interface packages.
import CosNotifyChannelAdmin

class StructuredProxyPushSupplier(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.StructuredProxyPushSupplier):
    """ Interface: IDL:att.com/AttNotification/StructuredProxyPushSupplier:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/StructuredProxyPushSupplier:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/StructuredProxyPushSupplier:1.0", "000000000000000E00000064000000000000003C49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F5374727563747572656450726F787950757368537570706C6965723A312E30000000001C5374727563747572656450726F787950757368537570706C69657200", StructuredProxyPushSupplier)

# Import base interface packages.
import CosNotifyChannelAdmin

class StructuredProxyPullSupplier(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.StructuredProxyPullSupplier):
    """ Interface: IDL:att.com/AttNotification/StructuredProxyPullSupplier:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/StructuredProxyPullSupplier:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/StructuredProxyPullSupplier:1.0", "000000000000000E00000064000000000000003C49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F5374727563747572656450726F787950756C6C537570706C6965723A312E30000000001C5374727563747572656450726F787950756C6C537570706C69657200", StructuredProxyPullSupplier)

# Import base interface packages.
import CosNotifyChannelAdmin

class StructuredProxyPushConsumer(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.StructuredProxyPushConsumer):
    """ Interface: IDL:att.com/AttNotification/StructuredProxyPushConsumer:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/StructuredProxyPushConsumer:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/StructuredProxyPushConsumer:1.0", "000000000000000E00000064000000000000003C49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F5374727563747572656450726F787950757368436F6E73756D65723A312E30000000001C5374727563747572656450726F787950757368436F6E73756D657200", StructuredProxyPushConsumer)

# Import base interface packages.
import CosNotifyChannelAdmin

class StructuredProxyPullConsumer(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.StructuredProxyPullConsumer):
    """ Interface: IDL:att.com/AttNotification/StructuredProxyPullConsumer:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/StructuredProxyPullConsumer:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/StructuredProxyPullConsumer:1.0", "000000000000000E00000064000000000000003C49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F5374727563747572656450726F787950756C6C436F6E73756D65723A312E30000000001C5374727563747572656450726F787950756C6C436F6E73756D657200", StructuredProxyPullConsumer)

# Import base interface packages.
import CosNotifyChannelAdmin

class SequenceProxyPushSupplier(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.SequenceProxyPushSupplier):
    """ Interface: IDL:att.com/AttNotification/SequenceProxyPushSupplier:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/SequenceProxyPushSupplier:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/SequenceProxyPushSupplier:1.0", "000000000000000E00000062000000000000003A49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F53657175656E636550726F787950757368537570706C6965723A312E300000000000001A53657175656E636550726F787950757368537570706C69657200", SequenceProxyPushSupplier)

# Import base interface packages.
import CosNotifyChannelAdmin

class SequenceProxyPullSupplier(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.SequenceProxyPullSupplier):
    """ Interface: IDL:att.com/AttNotification/SequenceProxyPullSupplier:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/SequenceProxyPullSupplier:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/SequenceProxyPullSupplier:1.0", "000000000000000E00000062000000000000003A49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F53657175656E636550726F787950756C6C537570706C6965723A312E300000000000001A53657175656E636550726F787950756C6C537570706C69657200", SequenceProxyPullSupplier)

# Import base interface packages.
import CosNotifyChannelAdmin

class SequenceProxyPushConsumer(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.SequenceProxyPushConsumer):
    """ Interface: IDL:att.com/AttNotification/SequenceProxyPushConsumer:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/SequenceProxyPushConsumer:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/SequenceProxyPushConsumer:1.0", "000000000000000E00000062000000000000003A49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F53657175656E636550726F787950757368436F6E73756D65723A312E300000000000001A53657175656E636550726F787950757368436F6E73756D657200", SequenceProxyPushConsumer)

# Import base interface packages.
import CosNotifyChannelAdmin

class SequenceProxyPullConsumer(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.SequenceProxyPullConsumer):
    """ Interface: IDL:att.com/AttNotification/SequenceProxyPullConsumer:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/SequenceProxyPullConsumer:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/SequenceProxyPullConsumer:1.0", "000000000000000E00000062000000000000003A49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F53657175656E636550726F787950756C6C436F6E73756D65723A312E300000000000001A53657175656E636550726F787950756C6C436F6E73756D657200", SequenceProxyPullConsumer)

# Import base interface packages.
import CosNotifyChannelAdmin

class SupplierAdmin(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.SupplierAdmin):
    """ Interface: IDL:att.com/AttNotification/SupplierAdmin:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/SupplierAdmin:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/SupplierAdmin:1.0", "000000000000000E0000004A000000000000002E49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F537570706C69657241646D696E3A312E300000000000000E537570706C69657241646D696E00", SupplierAdmin)

# Import base interface packages.
import CosNotifyChannelAdmin

class ConsumerAdmin(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.ConsumerAdmin):
    """ Interface: IDL:att.com/AttNotification/ConsumerAdmin:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/ConsumerAdmin:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/ConsumerAdmin:1.0", "000000000000000E0000004A000000000000002E49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F436F6E73756D657241646D696E3A312E300000000000000E436F6E73756D657241646D696E00", ConsumerAdmin)

class ChannelStats:
    """ Struct: IDL:att.com/AttNotification/ChannelStats:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/ChannelStats:1.0"

    def __init__(self, _num_announcements, _num_notifications):
        """ Constructor. """

        self.num_announcements = _num_announcements
        self.num_notifications = _num_notifications
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.num_announcements, self.num_notifications)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/ChannelStats:1.0", "000000000000000F00000088000000000000002D49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F4368616E6E656C53746174733A312E30000000000000000D4368616E6E656C53746174730000000000000002000000126E756D5F616E6E6F756E63656D656E747300000000000003000000126E756D5F6E6F74696669636174696F6E7300000000000003", ChannelStats)

# Import base interface packages.
import CosNotifyChannelAdmin

class EventChannel(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.EventChannel):
    """ Interface: IDL:att.com/AttNotification/EventChannel:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/EventChannel:1.0"

    def obtain_subscription_types(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/EventChannel/obtain_subscription_types:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:omg.org/CosNotification/EventTypeSeq:1.0"))

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("obtain_subscription_types", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def obtain_offered_types(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/EventChannel/obtain_offered_types:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:omg.org/CosNotification/EventTypeSeq:1.0"))

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("obtain_offered_types", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def obtain_stats(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/EventChannel/obtain_stats:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:att.com/AttNotification/ChannelStats:1.0"))

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("obtain_stats", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/EventChannel:1.0", "000000000000000E00000049000000000000002D49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F4576656E744368616E6E656C3A312E30000000000000000D4576656E744368616E6E656C00", EventChannel)

# Import base interface packages.
import CosNotifyChannelAdmin
import CosNotification
import CosNotification

class EventChannelFactory(Fnorb.orb.CORBA.Object, Interactive, CosNotifyChannelAdmin.EventChannelFactory, CosNotification.QoSAdmin, CosNotification.AdminPropertiesAdmin):
    """ Interface: IDL:att.com/AttNotification/EventChannelFactory:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/EventChannelFactory:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/EventChannelFactory:1.0", "000000000000000E00000054000000000000003449444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F4576656E744368616E6E656C466163746F72793A312E3000000000144576656E744368616E6E656C466163746F727900", EventChannelFactory)

# Import base interface packages.
import CosNotifyFilter

class Filter(Fnorb.orb.CORBA.Object, Interactive, CosNotifyFilter.Filter):
    """ Interface: IDL:att.com/AttNotification/Filter:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/Filter:1.0"

    def MyFID(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Filter/MyFID:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:omg.org/CosNotifyFilter/FilterID:1.0"))

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("MyFID", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/Filter:1.0", "000000000000000E0000003B000000000000002749444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F46696C7465723A312E3000000000000746696C74657200", Filter)

# Import base interface packages.
import CosNotifyFilter

class MappingFilter(Fnorb.orb.CORBA.Object, Interactive, CosNotifyFilter.MappingFilter):
    """ Interface: IDL:att.com/AttNotification/MappingFilter:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/MappingFilter:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/MappingFilter:1.0", "000000000000000E0000004A000000000000002E49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F4D617070696E6746696C7465723A312E300000000000000E4D617070696E6746696C74657200", MappingFilter)

# Import base interface packages.
import CosNotifyFilter

class FilterFactory(Fnorb.orb.CORBA.Object, Interactive, CosNotifyFilter.FilterFactory):
    """ Interface: IDL:att.com/AttNotification/FilterFactory:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/FilterFactory:1.0"

    pass

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/FilterFactory:1.0", "000000000000000E0000004A000000000000002E49444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F46696C746572466163746F72793A312E300000000000000E46696C746572466163746F727900", FilterFactory)

# Alias: IDL:att.com/AttNotification/ServerProperties:1.0
Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/ServerPropertiesone)

class UnsupportedServerProp(Fnorb.orb.CORBA.UserException):
    """ Exception: IDL:att.com/AttNotification/UnsupportedServerProp:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/UnsupportedServerProp:1.0"

    def __init__(self, _server_prop_err):
        """ Constructor. """

        self.server_prop_err = _server_prop_err
        return

    def __getinitargs__(self):
        """ Return the constructor arguments for unpickling. """

        return (self.server_prop_err,)

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/UnsupportedServerPropnsupportedServerProp)

class Server(Fnorb.orb.CORBA.Object, Interactive):
    """ Interface: IDL:att.com/AttNotification/Server:1.0 """

    _FNORB_ID = "IDL:att.com/AttNotification/Server:1.0"

    def destroy(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Server/destroy:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("destroy", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def get_filter_factory(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Server/get_filter_factory:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_Object)

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("get_filter_factory", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def get_channel_factory(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Server/get_channel_factory:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_Object)

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("get_channel_factory", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def get_default_channel(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Server/get_default_channel:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_Object)

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("get_default_channel", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def results_to_file(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Server/results_to_file:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.TC_boolean)

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("results_to_file", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def get_server_props(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Server/get_server_props:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []
        outputs.append(Fnorb.orb.CORBA.typecode("IDL:att.com/AttNotification/ServerProperties:1.0"))

        # Typecodes for user exceptions.
        exceptions = []

        # Create a request object.
        request = self._create_request("get_server_props", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

    def set_server_props(self, *args, **kw):
        """ Operation: IDL:att.com/AttNotification/Server/set_server_props:1.0 """

        # Typecodes for 'in' and 'inout' parameters.
        inputs = []
        inputs.append(Fnorb.orb.CORBA.typecode("IDL:att.com/AttNotification/ServerProperties:1.0"))

        # Typecodes for the result, 'inout' and 'out' parameters.
        outputs = []

        # Typecodes for user exceptions.
        exceptions = []
        exceptions.append(Fnorb.orb.CORBA.typecode("IDL:att.com/AttNotification/UnsupportedServerProp:1.0"))

        # Create a request object.
        request = self._create_request("set_server_props", inputs, outputs, exceptions)

        # Make the request!
        apply(request.invoke, args, kw)

        # Return the results.
        return request.results()

Fnorb.orb.TypeManager.TypeManager_init().add_type("IDL:att.com/AttNotification/Server:1.0", "000000000000000E0000003B000000000000002749444C3A6174742E636F6D2F4174744E6F74696669636174696F6E2F5365727665723A312E3000000000000753657276657200", Server)

#############################################################################
